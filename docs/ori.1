.TH ORI "1" "September 2013" "Ori Project" "Ori Distributed File System"
.SH NAME
ori \- Ori File System command line interface
.SH SYNOPSIS
.B ori
\fICOMMAND\fR [\fIARGUMENTS\fR...]
.SH DESCRIPTION
This tool provides the command line interface to the Ori distributed file 
system.  Provides useful tools for accessing, manipulating, and repairing Ori 
repositories without the use of FUSE.  It can be used alone without FUSE to 
checkout a snapshot of a tree and commit changes to one.  This tool is also the 
main daemon used by the SSH push/pull interface.

This command line tool also controls the Ori FUSE driver if run inside a 
mounted file system rather than a repository.  Only certain commands are 
supported at the moment and the list is documented in the \fBorifs\fR man page.

N.B. This project is still in flux and repository layouts may not be compatible 
between releases.  You may be required to copy files from one repository to 
another manually and the history may not be preserved.

.SH REPOSITORY COMMANDS
This list contains commands that will operate on your local instance of the 
repository.  These may callout to remote repositories for data if this was an 
InstaCloned repository.
.TP
\fBcheckout\fR [\-\-force] \fICOMMIT-HASH\fR
Checkout a revision of the repository.  By default this applies the current 
modified files onto the specified revision, but for most users the merge 
command is a safer alternative.  The \-\-force flag is used to discard current 
changes and checkout the revision specified.
.TP
\fBlog\fR
Display a log of changes made to the repository.
.TP
\fBmerge\fR \fICOMMIT-HASH\fR
Merges the specified change with the current HEAD.
.TP
\fBnewfs\fR \fIFS-NAME\fR
Create a file system with the given name.
.TP
\fBremovefs\fR \fIFS-NAME\fR
Remove the specified file system.
.TP
\fBshow\fR
Show repository information.
.TP
\fBsnapshot\fR [\-m \fIMESSAGE\fR] [\fISNAPSHOT-NAME\fR]
Take a snapshot of the repository.  You may optionally supply a message to be 
included and a name.
.TP
\fBsnapshots\fR
List all snapshots in this repository.
.TP
\fBstatus\fR
Show a list of currently modified files and directories in the repository.
.TP
\fBtip\fR
Print the commit hash for the HEAD revision.

.SH REMOTE MANAGEMENT COMMANDS
This section lists commands used to clone repositories, pull changes, and 
manage a list of remote repositories to interact with.  The special remote 
repository named \fIorigin\fR is used as the default for certain operations 
that take an optional remote name. At the moment an InstaCloned repository can 
only be created with \fBorifs\fR.
.TP
\fBreplicate\fR [\-\-ondemand] \fISOURCE-PATH\fR
Clone a remote or local repository into a new directory.
.TP
\fBpull\fR [\fIPATH|REMOTE-NAME\fR]
Pulls changes from a repository. The user can specify a path to another 
repository or the name of a previously registered repository. By default the 
command pulls from the origin.
.TP
\fBremote\fR
Display a list of the remote nodes.
.TP
\fBremote add\fR \fINAME\fR \fIPATH\fR
Add a remote repository given a path
.TP
\fBremote remove\fR \fINAME\fR
Remove a remote repository by name

.SH ADVANCED COMMANDS
This section lists a few commands that are for advanced users only.  They 
either provide access to lower level functionality or are experimental.  The 
verify command is useful to all users to check that the repository has not been 
corrupted.
.TP
\fBfilelog\fR
Displays a log of relevant commits made to the specified file.
.TP
\fBfindheads\fR
Searches for detached heads that are not referenced by a branch.
.TP
\fBgc\fR
Garbage collect any deleted objects that have not been reclaimed.  This will 
repack the pack files that contain deleted objects.
.TP
\fBgraft\fR
Experimental command to graft changes from one repository into another.
.TP
\fBpurgecommit\fR \fICOMMIT-HASH\fR
Deletes a commit. Use this command with caution as it's experimental as certain 
commands may no longer work after.
.TP
\fBverify\fR
Verify that the repository is consistent.

.\" .SH KEY MANAGEMENT COMMANDS
.\" This section provides a list of key management commands that help a repository 
.\" maintain a list of trusted keys and set the signing key for commits.  Commits 
.\" are automatically signed if a private key is set.  The \fBlog\fR command 
.\" displays whether a signature has been verified in Commit objects.
.\" .TP
.\" \fBaddkey\fR \fIKEYFILE\fR
.\" Add a signing key to the repository.
.\" .TP
.\" \fBlistkeys\fR
.\" List the signing keys available in this repository.
.\" .TP
.\" \fBremovekey\fR
.\" Remove a public key from the repository.
.\" .TP
.\" \fBsetkey\fR
.\" Set the repository private key used for signing commits.

.SH OTHER COMMANDS
.TP
\fBhelp\fR
Display a list of commands and their purpose.

.TP
.SH "SEE ALSO"
.BR orifs (1),
.BR orisync (1),
.BR ori_httpd (1)
